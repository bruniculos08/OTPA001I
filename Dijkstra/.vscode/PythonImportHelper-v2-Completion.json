[
    {
        "label": "INFINITE",
        "importPath": "asyncio.windows_events",
        "description": "asyncio.windows_events",
        "isExtraImport": true,
        "detail": "asyncio.windows_events",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "Infinity",
        "importPath": "numpy",
        "description": "numpy",
        "isExtraImport": true,
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "createAdjMatrix",
        "kind": 2,
        "importPath": "Dijkstra",
        "description": "Dijkstra",
        "peekOfCode": "def createAdjMatrix():\n    # (1) Path of the file containing the graph edges with weights:\n    generalPath = \"C:\\\\Users\\\\bruni\\\\OneDrive\\\\Documentos\\\\GitHub\\\\OTPA001I\\\\Dijkstra\"\n    # (2) Opening the file:\n    with open(generalPath + \"\\\\Graph.txt\") as file:\n        # (2.1) Getting a vector of strings with every row from the file:\n        rows = file.readlines()\n    # (3) Getting the number of edgers:\n    verticesNum = int(rows[0])\n    # (4) Starting the adjacency matrix:",
        "detail": "Dijkstra",
        "documentation": {}
    },
    {
        "label": "dijkstra",
        "kind": 2,
        "importPath": "Dijkstra",
        "description": "Dijkstra",
        "peekOfCode": "def dijkstra(start, end, graph, verticesNum):\n    start = start-1\n    end = end-1\n    # (1) Marks[i] represent the known lowest distance between vertice i and the start vertice: \n    Marks = [INFINITE for i in range(verticesNum)]\n    Marks[start] = 0\n    # (2) Pre[i] represents the predecessor vertice of vi in the smallest path between vertice i and the start vertice:\n    Pre = [-1 for i in range(verticesNum)]\n    Pre[start] = start\n    # (3) The value isTemp[i] tells if vi belongs to the Temporary Set of vertices:",
        "detail": "Dijkstra",
        "documentation": {}
    }
]